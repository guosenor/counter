{"version":3,"sources":["component/RepaymentCalculator.js","component/RepaymentCalculator1.js","App.js","serviceWorker.js","index.js"],"names":["RepaymentCalculator","useState","list","setList","totalInterest","seTotalInterest","repaymentCount","setRepaymentCount","labelCol","span","wrapperCol","name","onFinish","values","amount","interestRate","repayment","day","everyMouth","moment","all","principal","interest","Decimal","mul","div","toFixed","sub","push","format","add","forEach","item","length","Item","label","rules","required","message","min","placeholder","defaultValue","formatter","value","parser","replace","locale","zhCN","offset","type","htmlType","dataSource","renderItem","xs","sm","md","lg","RepaymentCalculator1","props","setState","state","layout","tailLayout","this","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"gXAyHeA,MAnHf,WACI,IAD2B,EAQHC,mBAAS,IARN,mBAQpBC,EARoB,KAQdC,EARc,OAScF,mBAAS,GATvB,mBASpBG,EAToB,KASLC,EATK,OAUiBJ,mBAAS,GAV1B,mBAUpBK,EAVoB,KAUJC,EAVI,KA+C3B,OACI,6BACI,kBAAC,IAAD,iBAhDO,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KA8ChB,CAAkBE,KAAK,gBAAgBC,SArC9B,SAAAC,GAKb,IALwB,IAChBC,EAAyCD,EAAzCC,OAAQC,EAAiCF,EAAjCE,aAAcC,EAAmBH,EAAnBG,UAAWC,EAAQJ,EAARI,IACnCC,EAAa,IAAIC,IAAOF,GACxBf,EAAO,GACTkB,EAAMN,EACHM,EAAM,GAAG,CACZ,IAAIC,OAAS,EAAEC,OAAQ,EACvB,GAAIF,EAAMJ,EAAW,CAGjB,GAFAM,EAAW,IAAIC,IAAQH,GAAKI,IAAI,IAAID,IAAQR,GAAcU,IAAI,IAAIF,IAAQ,OAAOE,IAAI,IAAIF,IAAQ,KAAKG,QAAQ,IAC9GL,EAAY,IAAIE,IAAQP,GAAWW,IAAI,IAAIJ,IAAQD,IAAWI,QAAQ,IACtD,EACZ,MAEJN,EAAM,IAAIG,IAAQH,GAAKO,IAAI,IAAIJ,IAAQF,IAAYK,QAAQ,QAE3DJ,EAAW,IAAIC,IAAQH,GAAKI,IAAI,IAAID,IAAQR,GAAcU,IAAI,IAAIF,IAAQ,OAAOG,QAAQ,GACzFL,EAAY,IAAIE,IAAQH,GAAKO,IAAI,IAAIJ,IAAQD,IAAWI,QAAQ,GAChEN,EAAM,EAEVlB,EAAK0B,KAAK,CACNX,IAAKC,EAAWW,OAAO,UACvBR,YACAC,WACAR,OAAQM,IAEZF,EAAWY,IAAI,EAAG,KAEtB,IAAI1B,EAAgB,IAAImB,IAAQ,GAChCrB,EAAK6B,SAAQ,SAAAC,GACT5B,EAAeA,EAAc0B,IAAI,IAAIP,IAAQS,EAAKV,cAEtDnB,EAAQD,GACRK,EAAkBL,EAAK+B,QACvB5B,EAAgBD,EAAcsB,QAAQ,OAK9B,kBAAC,IAAKQ,KAAN,CAAWvB,KAAK,SAASwB,MAAM,2BAAOC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gDACrE,kBAAC,IAAD,CAAaC,IAAK,IAAOC,YAAY,YAEzC,kBAAC,IAAKN,KAAN,CAAWvB,KAAK,eAAewB,MAAM,eAAKC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCACzE,kBAAC,IAAD,CACIG,aAAc,KACdF,IAAK,EACLC,YAAY,eACZE,UAAW,SAAAC,GAAK,gBAAOA,EAAP,MAChBC,OAAQ,SAAAD,GAAK,OAAIA,EAAME,QAAQ,IAAK,QAG5C,kBAAC,IAAKX,KAAN,CAAWvB,KAAK,YAAYwB,MAAM,2BAAOC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gDACxE,kBAAC,IAAD,CAAaC,IAAK,EAAGC,YAAY,YAErC,kBAAC,IAAKN,KAAN,CAAWvB,KAAK,MAAMwB,MAAM,qBAAMC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,0CACjE,kBAAC,IAAD,CAAYQ,OAAQC,OAExB,kBAAC,IAAKb,KA/DC,CACfxB,WAAY,CAAEsC,OAAQ,EAAGvC,KAAM,KA+DnB,kBAAC,IAAD,CAAQwC,KAAK,UAAUC,SAAS,UAAhC,kBAKR,6BAEE5C,EAAe,GACf,iDACUA,GAGZ,6BAEEF,EAAc,GACd,iDACUA,GAIR,kBAAC,IAAD,CACI+C,WAAYjD,EACZkD,WAAY,SAAApB,GAAI,OAEZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKqB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8BAAM,2BAAIxB,EAAKf,OAEnB,kBAAC,IAAD,CAAKoC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8CAAUxB,EAAKX,YAEnB,kBAAC,IAAD,CAAKgC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8CAAUxB,EAAKV,WAEnB,kBAAC,IAAD,CAAK+B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8CAAUxB,EAAKlB,gB,6CCgBhC2C,E,YAxHX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAcV9C,SAAW,SAACC,GAKR,IALkB,IACVC,EAAyCD,EAAzCC,OAAQC,EAAiCF,EAAjCE,aAAcC,EAAmBH,EAAnBG,UAAWC,EAAQJ,EAARI,IACnCC,EAAa,IAAIC,IAAOF,GACxBf,EAAO,GACTkB,EAAMN,EACHM,EAAM,GAAG,CACZ,IAAIC,OAAS,EAAEC,OAAQ,EACvB,GAAIF,EAAMJ,EAAW,CAGjB,GAFAM,EAAW,IAAIC,IAAQH,GAAKI,IAAI,IAAID,IAAQR,GAAcU,IAAI,IAAIF,IAAQ,OAAOE,IAAI,IAAIF,IAAQ,KAAKG,QAAQ,IAC9GL,EAAY,IAAIE,IAAQP,GAAWW,IAAI,IAAIJ,IAAQD,IAAWI,QAAQ,IACtD,EACZ,MAEJN,EAAM,IAAIG,IAAQH,GAAKO,IAAI,IAAIJ,IAAQF,IAAYK,QAAQ,QAE3DJ,EAAW,IAAIC,IAAQH,GAAKI,IAAI,IAAID,IAAQR,GAAcU,IAAI,IAAIF,IAAQ,OAAOG,QAAQ,GACzFL,EAAY,IAAIE,IAAQH,GAAKO,IAAI,IAAIJ,IAAQD,IAAWI,QAAQ,GAChEN,EAAM,EAEVlB,EAAK0B,KAAK,CACNX,IAAKC,EAAWW,OAAO,UACvBR,YACAC,WACAR,OAAQM,IAEZF,EAAWY,IAAI,EAAG,KAEtB,IAAI1B,EAAgB,IAAImB,IAAQ,GAChCrB,EAAK6B,SAAQ,SAAAC,GACT5B,EAAeA,EAAc0B,IAAI,IAAIP,IAAQS,EAAKV,cAEtD,EAAKqC,SAAS,CAACzD,KAAKA,IACpB,EAAKyD,SAAS,CAACrD,eAAeJ,EAAK+B,SACnC,EAAK0B,SAAS,CAACvD,cAAcA,EAAcsB,QAAQ,MA9CnD,EAAKkC,MAAM,CACP1D,KAAK,GACLI,eAAe,EACfF,cAAc,GAElB,EAAKyD,OAAS,CACVrD,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEvB,EAAKqD,WAAa,CACfpD,WAAY,CAAEsC,OAAQ,EAAGvC,KAAM,KAZrB,E,sEAmDd,OACI,6BACA,kBAAC,IAAD,iBAAUsD,KAAKF,OAAf,CAAwBlD,KAAK,gBAAgBC,SAAUmD,KAAKnD,WACxD,kBAAC,IAAKsB,KAAN,CAAWvB,KAAK,SAASwB,MAAM,2BAAOC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gDACrE,kBAAC,IAAD,CAAaC,IAAK,IAAOC,YAAY,YAEzC,kBAAC,IAAKN,KAAN,CAAWvB,KAAK,eAAewB,MAAM,eAAKC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCACzE,kBAAC,IAAD,CACIG,aAAc,KACdF,IAAK,EACLC,YAAY,eACZE,UAAW,SAAAC,GAAK,gBAAOA,EAAP,MAChBC,OAAQ,SAAAD,GAAK,OAAIA,EAAME,QAAQ,IAAK,QAG5C,kBAAC,IAAKX,KAAN,CAAWvB,KAAK,YAAYwB,MAAM,2BAAOC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gDACxE,kBAAC,IAAD,CAAaC,IAAK,EAAGC,YAAY,YAErC,kBAAC,IAAKN,KAAN,CAAWvB,KAAK,MAAMwB,MAAM,qBAAMC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,0CACjE,kBAAC,IAAD,CAAYQ,OAAQC,OAExB,kBAAC,IAAKb,KAAS6B,KAAKD,WAChB,kBAAC,IAAD,CAAQb,KAAK,UAAUC,SAAS,UAAhC,kBAKR,6BAEEa,KAAKH,MAAMtD,eAAe,GAC1B,iDACUyD,KAAKH,MAAMtD,gBAGvB,6BAEEyD,KAAKH,MAAMxD,cAAc,GACzB,iDACU2D,KAAKH,MAAMxD,eAInB,kBAAC,IAAD,CACI+C,WAAYY,KAAKH,MAAM1D,KACvBkD,WAAY,SAAApB,GAAI,OAEZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKqB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8BAAM,2BAAIxB,EAAKf,OAEnB,kBAAC,IAAD,CAAKoC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8CAAUxB,EAAKX,YAEnB,kBAAC,IAAD,CAAKgC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8CAAUxB,EAAKV,WAEnB,kBAAC,IAAD,CAAK+B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,8CAAUxB,EAAKlB,mB,GA7GZkD,IAAMC,WCiB1BC,MAhBf,WACE,OACE,kBAAC,IAAD,CAAKC,UAAU,QACb,kBAAC,IAAD,CAAK1D,KAAM,GACX,kBAAC,EAAD,OAEA,kBAAC,IAAD,CAAKA,KAAM,GACX,kBAAC,EAAD,OAEA,kBAAC,IAAD,CAAKA,KAAM,GACX,kBAAC,EAAD,SCJc2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM9C,c","file":"static/js/main.96b9f76d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Decimal from 'decimal.js'\r\nimport { Form, InputNumber, Button, Row, Col, DatePicker, List } from 'antd';\r\nimport zhCN from 'antd/es/date-picker/locale/zh_CN'; \r\nimport moment from 'moment';\r\n\r\nfunction RepaymentCalculator() {\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 5, span: 10 },\r\n    };\r\n    const [list, setList] = useState([]);\r\n    const [totalInterest, seTotalInterest] = useState(0);\r\n    const [repaymentCount, setRepaymentCount] = useState(0);\r\n\r\n    const onFinish = values => {\r\n        const { amount, interestRate, repayment, day } = values;\r\n        const everyMouth = new moment(day)\r\n        const list = [];\r\n        let all = amount;\r\n        while (all > 0) {\r\n            let principal, interest\r\n            if (all > repayment) {\r\n                interest = new Decimal(all).mul(new Decimal(interestRate).div(new Decimal(100))).div(new Decimal(12)).toFixed(2);\r\n                principal = new Decimal(repayment).sub(new Decimal(interest)).toFixed(2);\r\n                if (principal < 0) {\r\n                    break;\r\n                }\r\n                all = new Decimal(all).sub(new Decimal(principal)).toFixed(2)\r\n            } else {\r\n                interest = new Decimal(all).mul(new Decimal(interestRate).div(new Decimal(100))).toFixed(2);\r\n                principal = new Decimal(all).sub(new Decimal(interest)).toFixed(2);\r\n                all = 0\r\n            }\r\n            list.push({\r\n                day: everyMouth.format(\"YYYY-M\"),\r\n                principal,\r\n                interest,\r\n                amount: all\r\n            })\r\n            everyMouth.add(1, 'M')\r\n        }\r\n        let totalInterest = new Decimal(0);\r\n        list.forEach(item=>{\r\n            totalInterest= totalInterest.add(new Decimal(item.interest)) \r\n        });\r\n        setList(list)\r\n        setRepaymentCount(list.length)\r\n        seTotalInterest(totalInterest.toFixed(2))\r\n    };\r\n    return (\r\n        <div>\r\n            <Form {...layout} name=\"control-hooks\" onFinish={onFinish}>\r\n                <Form.Item name=\"amount\" label=\"贷款余额\" rules={[{ required: true, message: '请输入贷款余额' }]}>\r\n                    <InputNumber min={10000} placeholder='元' />\r\n                </Form.Item>\r\n                <Form.Item name=\"interestRate\" label=\"利率\" rules={[{ required: true, message: '请输入利率' }]}>\r\n                    <InputNumber\r\n                        defaultValue={3.25}\r\n                        min={1}\r\n                        placeholder=\"利率\"\r\n                        formatter={value => `${value}%`}\r\n                        parser={value => value.replace('%', '')}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item name=\"repayment\" label=\"月还款额\" rules={[{ required: true, message: '请输入月还款额' }]}>\r\n                    <InputNumber min={0} placeholder='元' />\r\n                </Form.Item>\r\n                <Form.Item name='day' label=\"还款日\" rules={[{ required: true, message: '请选择还款日' }]}>\r\n                    <DatePicker locale={zhCN}  />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout} >\r\n                    <Button type=\"primary\" htmlType='submit'>\r\n                        计算\r\n              </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <div>\r\n            {\r\n              repaymentCount>0&&\r\n              <b>\r\n                   总期数:{repaymentCount}\r\n              </b>\r\n            }\r\n            <br/>\r\n            {\r\n              totalInterest>0&&\r\n              <b>\r\n                   总利息:{totalInterest}\r\n              </b>\r\n            }\r\n                 \r\n                <List\r\n                    dataSource={list}\r\n                    renderItem={item => (\r\n                        // <List.Item>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={5} >\r\n                                <span><b>{item.day}</b></span>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={6} >\r\n                                <span>本金:{item.principal}</span>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={6} >\r\n                                <span>利息:{item.interest}</span>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={7} >\r\n                                <span>余额:{item.amount}</span>\r\n                            </Col>\r\n                        </Row>\r\n                        // </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default RepaymentCalculator","import React from 'react';\r\nimport Decimal from 'decimal.js'\r\nimport { Form, InputNumber, Button, Row, Col, DatePicker, List } from 'antd';\r\nimport zhCN from 'antd/es/date-picker/locale/zh_CN'; \r\nimport moment from 'moment';\r\nclass RepaymentCalculator1 extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            list:[],\r\n            repaymentCount:0,\r\n            totalInterest:0\r\n        };\r\n        this.layout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 16 },\r\n        };\r\n         this.tailLayout = {\r\n            wrapperCol: { offset: 5, span: 10 },\r\n        };\r\n    }\r\n    onFinish = (values)=>{\r\n        const { amount, interestRate, repayment, day } = values;\r\n        const everyMouth = new moment(day)\r\n        const list = [];\r\n        let all = amount;\r\n        while (all > 0) {\r\n            let principal, interest\r\n            if (all > repayment) {\r\n                interest = new Decimal(all).mul(new Decimal(interestRate).div(new Decimal(100))).div(new Decimal(12)).toFixed(2);\r\n                principal = new Decimal(repayment).sub(new Decimal(interest)).toFixed(2);\r\n                if (principal < 0) {\r\n                    break;\r\n                }\r\n                all = new Decimal(all).sub(new Decimal(principal)).toFixed(2)\r\n            } else {\r\n                interest = new Decimal(all).mul(new Decimal(interestRate).div(new Decimal(100))).toFixed(2);\r\n                principal = new Decimal(all).sub(new Decimal(interest)).toFixed(2);\r\n                all = 0\r\n            }\r\n            list.push({\r\n                day: everyMouth.format(\"YYYY-M\"),\r\n                principal,\r\n                interest,\r\n                amount: all\r\n            })\r\n            everyMouth.add(1, 'M')\r\n        }\r\n        let totalInterest = new Decimal(0);\r\n        list.forEach(item=>{\r\n            totalInterest= totalInterest.add(new Decimal(item.interest)) \r\n        });\r\n        this.setState({list:list})\r\n        this.setState({repaymentCount:list.length})\r\n        this.setState({totalInterest:totalInterest.toFixed(2)})\r\n    };\r\n    render(){\r\n        return (\r\n            <div>\r\n            <Form {...this.layout}  name=\"control-hooks\" onFinish={this.onFinish}>\r\n                <Form.Item name=\"amount\" label=\"贷款余额\" rules={[{ required: true, message: '请输入贷款余额' }]}>\r\n                    <InputNumber min={10000} placeholder='元' />\r\n                </Form.Item>\r\n                <Form.Item name=\"interestRate\" label=\"利率\" rules={[{ required: true, message: '请输入利率' }]}>\r\n                    <InputNumber\r\n                        defaultValue={3.25}\r\n                        min={1}\r\n                        placeholder=\"利率\"\r\n                        formatter={value => `${value}%`}\r\n                        parser={value => value.replace('%', '')}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item name=\"repayment\" label=\"月还款额\" rules={[{ required: true, message: '请输入月还款额' }]}>\r\n                    <InputNumber min={0} placeholder='元' />\r\n                </Form.Item>\r\n                <Form.Item name='day' label=\"还款日\" rules={[{ required: true, message: '请选择还款日' }]}>\r\n                    <DatePicker locale={zhCN}  />\r\n                </Form.Item>\r\n                <Form.Item {...this.tailLayout} >\r\n                    <Button type=\"primary\" htmlType='submit'>\r\n                        计算\r\n              </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <div>\r\n            {\r\n              this.state.repaymentCount>0&&\r\n              <b>\r\n                   总期数:{this.state.repaymentCount}\r\n              </b>\r\n            }\r\n            <br/>\r\n            {\r\n              this.state.totalInterest>0&&\r\n              <b>\r\n                   总利息:{this.state.totalInterest}\r\n              </b>\r\n            }\r\n                 \r\n                <List\r\n                    dataSource={this.state.list}\r\n                    renderItem={item => (\r\n                        // <List.Item>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={5} >\r\n                                <span><b>{item.day}</b></span>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={6} >\r\n                                <span>本金:{item.principal}</span>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={6} >\r\n                                <span>利息:{item.interest}</span>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={7} >\r\n                                <span>余额:{item.amount}</span>\r\n                            </Col>\r\n                        </Row>\r\n                        // </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default RepaymentCalculator1","import React from 'react';\nimport {Row, Col} from 'antd'\nimport './App.css';\nimport RepaymentCalculator from './component/RepaymentCalculator'\nimport RepaymentCalculator1 from './component/RepaymentCalculator1'\n\nfunction App() {\n  return (\n    <Row className='mt10'>\n      <Col span={8}>  \n      <RepaymentCalculator/>\n      </Col>\n      <Col span={8}>  \n      <RepaymentCalculator1/>\n      </Col>\n      <Col span={8}>  \n      <RepaymentCalculator/>\n      </Col>\n    </Row>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'moment/locale/zh-cn';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}